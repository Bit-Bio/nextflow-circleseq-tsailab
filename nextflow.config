/*
 * -------------------------------------------------
 *  Bit.Bio Nextflow config file template
 * -------------------------------------------------
 * Default config options for all environments can be set here.
 * These are overwritten by:
 * - Profiles selected at runtime
 * - Variables passed at runtime via flags
 */



// Global default params, used in configs
params {
  pipeline_name             = "nextflow-circleseq-tsailab"
  input                     = null
  output                    = null
  tracedir                  = "${params.output}/pipeline_info"

  // Max resource options
  // Defaults only, expecting to be overwritten
  max_memory                 = '128.GB'
  max_cpus                   = 16
  max_time                   = '240.h'

  //awsqueue = 'highpriority-eb16b4c0-d8dc-11ea-922f-0a0207fddeaf'
  //awsregion = 'us-east-1'
}

//
profiles {
  awsbatch {
    includeConfig 'conf/awsbatch-general.config'
    includeConfig 'conf/awsbatch-variable.config'
    }
  local {
    includeConfig 'conf/local-general.config'
    includeConfig 'conf/local-variable.config'
    }
  testmin_local {
  includeConfig 'conf/testing-min.config'
  }
  testmin_batch {
    includeConfig 'conf/testing-min.config'
    includeConfig 'conf/awsbatch-general.config'
    includeConfig 'conf/awsbatch-variable.config'
  }
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
timeline {
  enabled = true
  file = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
trace {
  enabled = true
  file = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}

manifest {
  name = 'bitbio/nextflow-circleseq-tsailab'
  author = 'Alan Tracey'
  homePage = 'https://github.com/bit-bio/nextflow-circleseq-tsailab'
  description = 'Runs circleseq pipeline'
  mainScript = 'main.nf'
  //nextflowVersion = '>=20.04.0' - Set this once pipeline is stable
  version = '0.1'
}

plugins {
    id 'nf-amazon'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
